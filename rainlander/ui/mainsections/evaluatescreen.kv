#: import os os
<EvaluateScreen>:
  name: 'evalu_scr'
  BoxLayout:
    id: scr_layout
    orientation: 'horizontal'
    Splitter:
      size_hint: None, 1
      min_size: (scr_layout.width + self.strip_size) / 5 * 1
      width:    (scr_layout.width + self.strip_size) / 5 * 1.2
      max_size: (scr_layout.width + self.strip_size) / 5 * 4
      sizable_from: 'right'
      FileChooserListView:
        id: file_tree
        path: os.getcwd()
        filters: ['*.jpg', '*.jpeg', '*.JPEG', '*.JPG', '*.PNG', '*.png', '*.BMP', '*.bmp']
        on_selection:
          root.load_preview()
          root.load_results()
    BoxLayout:
      id: main_panel
      orientation: 'vertical'
      Splitter:
        size_hint: 1, None
        min_size: (main_panel.height + self.strip_size) / 5 * 1
        height:   (main_panel.height + self.strip_size) / 5 * 3.5
        max_size: (main_panel.height + self.strip_size) / 5 * 4

        sizable_from: 'bottom'

        BoxLayout:
          id: image_panel
          orientation: 'horizontal'
          Splitter:
            size_hint: None, 1
            min_size: (image_panel.width + self.strip_size)/ 5 * 1
            width:    (image_panel.width + self.strip_size)/ 5 * 2.5
            max_size: (image_panel.width + self.strip_size)/ 5 * 4
            sizable_from: 'right'
            Image:
              id: img_display
              source: 'images/logo_02.png'
              size: self.texture_size
          Image:
            id: ret_display
            source: 'images/logo_02.png'
            size: self.texture_size

      ScrollView:
        do_scroll_y: True
        do_scroll_x: True
        GridLayout:
          padding: [5, 5, 5, 0]
          size_hint: None, None
          width: self.minimum_width
          height: self.minimum_height
          rows: 2
          spacing: 5
          GridLayout:
            cols: 1
            size_hint: None, None
            width: self.minimum_width
            height: self.minimum_height
            Button:
              text: 'Run'
              size_hint: None, None
              size: 150, 30
              on_release: root.evaluate()
          GridLayout:
            size_hint: None, None
            spacing: 5
            width: self.minimum_width
            height: self.minimum_height
            cols: 2
            # ********Parameter********
            Label:
              text: 'Model Selection'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            GridLayout:
              id: prarm_model_selector
              cols: 3
              size_hint: None, None
              size: 450, 30
              BoxLayout:
                # trick to not lost the Dropdown instance
                __safe_id: [dropdown_det.__self__]
                ToggleButton:
                  id: det_selector
                  group: 'model_selector'
                  text: 'Detection'
                  on_release:
                    dropdown_det.open(self)
                    self.state = 'down'
                  size_hint: None, None
                  size: 150, 30
                Widget:
                  on_parent: dropdown_det.dismiss()
                DropDown:
                  id: dropdown_det
                  on_select: det_selector.text = '{}'.format(args[1])
                  Button:
                    text: 'Yolo-v3'
                    size_hint: None, None
                    size: 150, 30
                    on_release: dropdown_det.select(self.text)
                  Button:
                    text: 'SSD'
                    size_hint: None, None
                    size: 150, 30
                    on_release: dropdown_det.select(self.text)
              BoxLayout:
                # trick to not lost the Dropdown instance
                __safe_id: [dropdown_cls.__self__]
                ToggleButton:
                  id: cls_selector
                  group: 'model_selector'
                  text: 'Classification'
                  on_release:
                    dropdown_cls.open(self)
                    self.state = 'down'
                  size_hint: None, None
                  size: 150, 30
                Widget:
                  on_parent: dropdown_cls.dismiss()
                DropDown:
                  id: dropdown_cls
                  on_select: cls_selector.text = '{}'.format(args[1])
                  Button:
                    text: 'ResNet-50'
                    size_hint: None, None
                    size: 150, 30
                    on_release: dropdown_cls.select(self.text)
                  Button:
                    text: 'VGG-16'
                    size_hint: None, None
                    size: 150, 30
                    on_release: dropdown_cls.select(self.text)
              BoxLayout:
                # trick to not lost the Dropdown instance
                __safe_id: [dropdown_seg.__self__]
                ToggleButton:
                  id: seg_selector
                  group: 'model_selector'
                  text: 'Segmentation'
                  on_release:
                    dropdown_seg.open(self)
                    self.state = 'down'
                  size_hint: None, None
                  size: 150, 30
                Widget:
                  on_parent: dropdown_seg.dismiss()
                DropDown:
                  id: dropdown_seg
                  on_select: seg_selector.text = '{}'.format(args[1])
                  Button:
                    text: 'DeepLab-v3'
                    size_hint: None, None
                    size: 150, 30
                    on_release: dropdown_seg.select(self.text)
                  Button:
                    text: 'U-Net'
                    size_hint: None, None
                    size: 150, 30
                    on_release: dropdown_seg.select(self.text)

            # ********Parameter********
            Label:
              text: 'Dataset Path'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            TextInput:
              id: param_image_dir
              readonly: True
              size_hint_y: None
              height: 30
              text: file_tree.path

            # ********Parameter********
            Button:
              text: 'Model File'
              size_hint: None, None
              size: 150, 30
              on_release: root.show_filechosser(text_input_id = "param_checkpoint_path")
            TextInput:
              id: param_checkpoint_path
              multiline: False
              size_hint_y: None
              height: 30

            # ********Parameter********
            Button:
              text: 'Class List File'
              size_hint: None, None
              size: 150, 30
              on_release: root.show_filechosser(text_input_id = "param_class_name_path")
            TextInput:
              id: param_class_name_path
              multiline: False
              size_hint: None, None
              size: 500, 30

            # ********Parameter********
            Label:
              text: 'Encrypted Model File'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            BoxLayout:
              size_hint: None, None
              size: 30, 30
              CheckBox:
                id: param_encrypted_initial_checkpoint
                active: True

            # ********Parameter********
            Label:
              text: 'Number of Classes'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            TextInput:
              id: param_num_classes
              text: "1"
              multiline: False
              size_hint: None, None
              size: 500, 30

            # ********Parameter********
            Label:
              text: 'GPUs to Use'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            TextInput:
              id: param_gpus
              text: "0"
              multiline: False
              size_hint: None, None
              size: 500, 30

            # ********Parameter********
            Label:
              text: 'Score [{:.2f}]'.format(param_min_score_threshold.value)
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            Slider:
              id: param_min_score_threshold
              size_hint: None, None
              size: 400, 30
              cursor_size: 20, 20
              min: 0
              step: 0.01
              max: 1

            # ********Parameter********
            Label:
              text: 'Batch Size [' + str(param_batch_size.value) + ']'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            Slider:
              id: param_batch_size
              size_hint: None, None
              size: 400, 30
              cursor_size: 20, 20
              min: 1
              step: 1
              max: 256

            # ********Parameter********
            Label:
              text: 'Input Width'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            TextInput:
              id: param_input_w
              text: "416"
              multiline: False
              size_hint: None, None
              size: 500, 30

            # ********Parameter********
            Label:
              text: 'Input Height'
              size_hint: None, None
              text_size: self.size
              halign: 'left'
              valign: 'center'
              size: 150, 30
            TextInput:
              id: param_input_h
              text: "416"
              multiline: False
              size_hint: None, None
              size: 500, 30

